import org.junit.*;
import static org.junit.Assert.*;

@Test
public class TestShape{
  public static void main(String[] args) {
    double width=2;
    double length =3;
    Shape rectangle = new Rectangle(width,length);
    assertTrue(rectangle.Shape());
  }
  public static void main(String[] args) {
    double width=2;
    double length=3;
    double depth=4;
    Shape cuboid = new Cuboid(width,length,depth);
    assertTrue(cuboid.Shape());
  }
}

@Test 
public void testSetLength() {
  System.out.println("setLength");
  int length= 1;
  Length instance = new length();
  assertEquals(instance.getLength(), length));
}
@Test
public void testGetLength() {
  System.out.println("getLength");
  Length instance = new length();
  int length1=1;
  instance.setLength(1);
  int len = instance.getLength();
  assertEquals(length1, len);
}

@Test
public void testSetWidth() {
  System.out.println("setWidth");
  int width= 2;
  Width instance = new width();
  assertEquals(instance.getWidth(), width));
}

@Test
public void testGetWidth() {
  System.out.println("getWidth");
  Width instance = new width();
  int width1=2;
  instance.setWidth(2);
  int wid = instance.getWidth();
  assertEquals(width1, wid);
}

@Test
public void testSetDepth() {
  System.out.println("setDepth");
  int depth= 3;
  Depth instance = new depth();
  assertEquals(instance.getDepth(), depth));
}

@Test
public void testGetDepth() {
  System.out.println("getDepth");
  Depth instance = new depth();
  int depth1=3;
  instance.getDepth(3);
  int dep = instance.getDepth();
  assertEquals(depth1, dep);
}

@Test
public void testRecArea() {
  Area instance = new areaRec();
  double area=10;
  instance.Rectangle(2,5);
  double area1 = instance.areaRec(2,5);
  assertEquals(area, area1);
}

@Test
public void testCubArea() {
  Area instance = new areaCub();
  double area=34;
  instance.Cuboid(2,5,1);
  double area1 = instance.areaCub(2,5,1);
  assertEquals(area, area1);
}

@Test
public void testRecPerimeter() {
  Perimeter instance = new perimeterRec();
  double perimeter=14;
  instance.Rectangle(2,5);
  double perimeter1 = instance.perimeterRec(2,5);
  assertEquals(perimeter, perimeter1);
}

@Test
public void testCubPerimeter() {
  Perimeter instance = new perimeterCub();
  double perimeter=10;
  instance.Cuboid(2,5,1);
  double perimeter1 = instance.perimeterCub(2,5,1);
  assertEquals(perimeter, perimeter1);
}

@Test
public static void assertCompareTo(Rectangle a, Rectangle b) {
  assertEquals(0,a.compareTo(b));
}

@Test
public void testSortByAreaR() {
  Double[] arr={20,14,30};
  Double[] exp={14,20,30};
  SortByAreaR(arr);
  assertArrayEquals(exp,arr);
}

@Test
public void testSortByAreaC() {
  Double[] arr1={20,14,30};
  Double[] exp1={14,20,30};
  SortByAreaC(arr1);
  assertArrayEquals(exp1,arr1);
}

@Test
public void testSortByVolume() {
  Double[] arr2={20,14,30};
  Double[] exp2={14,20,30};
  SortByVolumeC(arr2);
  assertArrayEquals(exp2,arr2);
}
